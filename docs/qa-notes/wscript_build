bld.recurse('../seano-export')
if True:
    from waflib import Task
    try:
        from html import escape  # python 3.x
    except ImportError:
        from cgi import escape  # python 2.x
    import yaml

    class qa_notes_render_task(Task.Task):
        def keyword(self):
            return 'Rendering QA Notes'

        def __str__(self):
            return ', '.join([node.path_from(node.ctx.launch_node()) for node in self.outputs])

        def run(self):
            releases = []
            with open(self.inputs[0].abspath(), 'r') as f:
                for l in yaml.load_all(f):
                    releases.extend(l)
                    break
            release = releases[0]
            releases = None
            with open(self.outputs[0].abspath(), 'w') as f:
                f.write('''<html><head>''')
                f.write('''<meta charset="utf-8">''')
                f.write('''<meta name="viewport" content="width=device-width, initial-scale=1.0">''')
                f.write('''<title>QA Notes for CE Mac Client v''')
                f.write(escape(release['name']))
                f.write(''' QA Notes</title><style type="text/css">
</style></head><body><h2>CE Mac Client v''')
                f.write(escape(release['name']))
                f.write(''' QA Notes</h2><ul>''')
                for note in release['notes']:
                    f.write('<li>')
                    f.write(escape(note.get('internal-short', {}).get('en-US', [None])[0])
                            or '<em>Internal release note missing</em>')
                    f.write('<div>')
                    text = note.get('testing', {}).get('en-US', '').splitlines()
                    text = [x for x in text if x] # prune empty lines
                    text = [escape(x) for x in text]
                    if not text: text = ['<em>QA Notes missing</em>']
                    text = ['<p>' + x + '</p>' for x in text]
                    f.write(''.join(text))
                    f.write('</div></li>')
                f.write('''</ul></body></html>''')
            return 0


    t = qa_notes_render_task(env=bld.env)
    t.set_inputs(bld.env.SEANO_EXPORT_YAML_NODE)
    t.set_outputs(bld.path.find_or_declare('qa-notes.html'))
    bld.add_to_group(t)
